<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADm
        BQAAAk1TRnQBSQFMAwEBAAEQAQABEAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARD/AEcAATUCNwFYAVMBhQGvAfYBTgGKAboB//AAATsBPQE+AWUBYgGMAbAB7wGS
        AbkB3gH/AUoBfwGpAfXcAAMYASEBTwFNAUsBfwHmAcYBqwH/AeYBxQGpAf8B2gG4AZsB/QGzAaABlAH+
        AZwBuAHTAf8BXQGMAbQB8gE1AjcBWMAAAT8BQgFGAXABSwFcAWoBpgE8AXsBtQHqATMBhgHJAfcBMwGG
        AckB9wEzAYYByQH3ATMBhgHJAfcBowGrAbEB/AHyAdwByQH/AfgB4wHOAf8B9wHgAccB/wH4AeIBywH/
        AfMB0QGzAf8BrwGgAZYB/gE5AToBOwFfxAABQgGAAbEB5gHCAdIB1wHwAacB2AHvAf0BngHbAfQB/wGW
        AdoB8wH/AY4B2AHzAf8BhgHXAfMB/wHlAcQBqAH/AfUB5QHWAf8B9AHaAcEB/wHzAdgBvQH/AfMB2AG9
        Af8B+AHjAcwB/wHZAbYBmgH/yAABOAGNAcsB9wHvAfoB/gH/AaEB6QH5Af8BkQHlAfgB/wGBAeEB9wH/
        AXAB3gH2Af8BYQHaAfUB/wHgAb0BngH/AfgB6gHcAf8B9AHdAcYB/wH0AdwBxAH/AfMB2AG9Af8B+AHi
        Ac0B/wHkAcEBpAH/yAABOgGWAc0B+AHyAfoB/QH/AbMB7QH6Af8BpAHpAfkB/wGVAeYB+AH/AYUB4gH3
        Af8BdAHeAfYB/wHmAcYBqgH/AfMB5AHWAf8B9gHgAcoB/wH1Ad4BxgH/AfUB3gHFAf8B+AHmAdMB/wHg
        AcIBqAH/yAABOgGaAdAB+QH2AfwB/gH/AcgB8gH8Af8BuQHvAfsB/wGsAewB+gH/AZwB6AH5Af8BiwHj
        AfcB/wGjAdIB0wH/AekBzQG0Af8B9QHnAdsB/wH4AewB3wH/AfIB3QHJAf8B6wHQAbgB/wGiAa8BrgH8
        yAABOQGiAdAB+gH+A/8B+AH9Av8B9gH9Av8B9QH8Av8B8wH8Af4B/wHYAfYB/AH/AZUB5gH4Af8BqQLU
        Af8ByAHGAbMB/wHgAb0BngH/AeUBxAGnAf8B4gHPAboB/wFIAaABxwH4yAABNwGmAdAB+gHoAfYB+wH/
        AZQB1AHvAf8BiAHOAe4B/wFxAcEB6QH/AckB6QH2Af8B8gH8Af4B/wHzAfwB/gH/AfIB/AH+Af8B8AH8
        Af4B/wHvAfsB/gH/Ae4B+wH+Af8B/gP/ATkBpAHLAffIAAE9AZ0BwwHyAfEB+gH9Af8BlAHeAfUB/wGT
        AdwB9AH/AYEB1QHyAf8BaAHKAe0B/wFqAcsB6gH/AYUB0wHvAf8BgAHSAe8B/wF4AdAB7wH/AXQBzwHu
        Af8BcAHPAe4B/wHpAfcB+wH/AToBoQHEAfPIAAE+AZ0BwAHwAfcB/AH+Af8BjgHkAfgB/wGRAd4B9QH/
        AZ8B4AH1Af8BrAHhAfYB/wHvAfsB/gH/AfQB/QH+Af8B8wH8Af4B/wHxAfwB/gH/Ae8B+wH+Af8B7gH7
        Af4B/wHrAe4B8AH5AUwBhgGaAdTIAAE6AaoBzQH4Af0C/gH/Af4D/wL+Av8B/QH+Av8B/gP/AeoB9wH7
        Af8BagG8AdgB+QFoAb0B1gH4AWgBvQHWAfgBaAG9AdYB+AF0AcEB1gH3AWwBoQGxAeEBNQI3AVbIAAFJ
        AYMBlQHQAVsBuQHXAfoBXQG6AdgB+gFdAboB2AH6AV0BugHYAfoBXAG6AdgB+gFLAZEBpgHdAxABFgML
        AQ8DCwEPAwsBDwMLAQ8DCwEPAwMBBP8AyQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGA
        FwAD/wEAAv8GAAH/AfgGAAH/AfAGAAH+CAABAQcAAQMHAAEDBwABAwcAAQMHAAEDBwABAwcAAQMHAAED
        BwABAwcAAQMGAAL/BgAL
</value>
  </data>
  <metadata name="openOPMLDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>108, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AABxRgFySAF0SAF0SQF0SQF0SAFzSAFxRgFvRQFtRAFqQgBpQABoQABoQABoQABoQAB3SwJ5TQJ7TQJ7
        TgJ7TgJ7TgJ5TQJ3SwJ1SQFyRwFvRQFsQwBpQQBoQABoQABoQAB+UAKBUgODUwODVAODVAOCUwOBUgN+
        UAJ7TgJ4SwJ0SQFwRgFtQwFqQQBoQABoQACGVgOJWASLWQSbcSi4nG23nG22m22RZhymhlDDsJHBr5CU
        cz1xRgFtQwFpQQBoQACOXASRXgWTYAWyjk/q5d3q5d3q5d2jfDfh2Mnc0sDc0sHo4tmIYyVwRgFsQwBp
        QACWYQWaZAacZgahbQ/BoGbu6uS2kVGYZQuxjlKMWwWjf0Hu6uSni110SQFvRQFqQgCeZwaiagalbAen
        bgfCnFjz8Oy1iz+eZwasgznj2cfz8Ovz8OyffkZ3SwJyRwFsQwClbAeqcAetcgivdAjIolv39fK8kEGl
        bAfk1r739fLq4tTApnuDVAV7TQJ0SQFuRQGrcQixdQi1eAi3egnPp136+fjClUOrcQfv5tji1LuWYQWl
        fTiUaiJ+UAJ2SwJwRgGwdQi3eQm7fQm+fwrVq1/9/PvHmUSwdQjZv5D9/Prz7eP8+/qfeTeAUQN4TAJy
        RwG0dwi7fAnBgQrEhAvZsGP+/v7MnUi0eAmudQ3Lq3HXwZvBpHGOXw6BUgN6TQJzSAG2eQm9fgrDggra
        rl3+/fv////+/frGl0GucwilbQedZgaTYAWLWQSCUwN6TQJzSAG2eAm9fgnDggrToEHr06jp0qjn0ajA
        jS6ucwilbAecZgaTYAWLWQSCUwN6TQJzSAGzdwi6fAm/gArCggrCggq/fwq6fAmzdwiscQijawabZQaS
        XwWJWASBUgN5TQJySAGvdAi1eAm6ewm8fQm8fQm6ewm1eAivdAiobwegaQaYYwWPXQSHVwN/UQN4TAJx
        RwGpbweucwizdgi1eAi1eAmzdgivcwipbwejawecZgaUYAWMWgSEVQN9TwJ2SgFwRgEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>